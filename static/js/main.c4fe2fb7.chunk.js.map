{"version":3,"sources":["db.js","components/Programs/ProgramItem.tsx","components/Programs/index.tsx","pages/Main/index.tsx","components/EditorInput/index.tsx","pages/Plan/index.tsx","helpers/time.ts","pages/Program/index.tsx","pages/Schedule/index.tsx","pages/Statistic/index.tsx","components/TrainingTimer/Button.tsx","components/TrainingTimer/Timer.tsx","components/TrainingTimer/index.tsx","pages/Training/index.tsx","routes.js","AppRoutes.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["defaultSchedule","id","title","time","active","programs","description","plan","settings","work","pause","roundes","rest","exercises","schedule","ProgramItem","_ref","react_default","a","createElement","className","key","react_router_dom","to","concat","Programs","map","props","Programs_ProgramItem","Main","components_Programs","EditorInput","label","name","value","type","onChange","_ref$message","message","step","Plan","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","changeValue","bind","assertThisInitialized","match","params","_this$fetchPlan","fetchPlan","planProps","objectWithoutProperties","setState","objectSpread","e","propName","currentTarget","propValue","defineProperty","row","renderPlanRow","_this$state","components_EditorInput","renderPlanList","React","Component","convertSeconds","seconds","hrs","Math","floor","min","sec","result","round","String","Program","kCal","_this$fetchProgram","fetchProgram","programProps","calculateTime","calculateCalories","Schedule","Statistic","Button","children","disabled","onClick","Timer","minutes","TrainingTimer","laps","onFinish","intervalTimerId","secondsRemaining","startCountDown","stopCountDown","tick","setTime","_result$split","split","_result$split2","slicedToArray","clearInterval","window","setInterval","Number","Fragment","TrainingTimer_Timer","TrainingTimer_Button","Training","training","counter","getPlanTitle","index","accTraining","acc","_","workoutTitle","toConsumableArray","getTraining","program","trainingLength","Array","from","length","reduce","currentExercise","components_TrainingTimer","routes","AppRoutes","react_router","path","exact","component","App","src_AppRoutes","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4fe2fb7.chunk.js","sourcesContent":["const defaultSchedule = [\n  {\n    \"id\": \"0\",\n    \"title\": \"Monday\",\n    \"time\": \"12:00\",\n    \"active\": 0\n  },\n  {\n    \"id\": \"1\",\n    \"title\": \"Tuesday\",\n    \"time\": \"12:00\",\n    \"active\": 0\n  },\n  {\n    \"id\": \"2\",\n    \"title\": \"Wednesday\",\n    \"time\": \"12:00\",\n    \"active\": 0\n  },\n  {\n    \"id\": \"3\",\n    \"title\": \"Thursday\",\n    \"time\": \"12:00\",\n    \"active\": 0\n  },\n  {\n    \"id\": \"4\",\n    \"title\": \"Friday\",\n    \"time\": \"12:00\",\n    \"active\": 0\n  },\n  {\n    \"id\": \"5\",\n    \"title\": \"Saturday\",\n    \"time\": \"12:00\",\n    \"active\": 0\n  },\n  {\n    \"id\": \"6\",\n    \"title\": \"Sunday\",\n    \"time\": \"12:00\",\n    \"active\": 0\n  }\n];\n\nconst programs = [\n  {\n    \"id\": \"0\",\n    \"title\": \"Abdominal muscles\",\n    \"description\": \"Training abdominal muscles\",\n    \"plan\": [\n      {\n        \"id\": \"1\",\n        \"title\": \"Raising the legs lying\"\n      },\n      {\n        \"id\": \"2\",\n        \"title\": \"Twisting\"\n      },\n      {\n        \"id\": \"3\",\n        \"title\": \"Rock climber\"\n      },\n      {\n        \"id\": \"4\",\n        \"title\": \"Bicycle\"\n      },\n      {\n        \"id\": \"5\",\n        \"title\": \"Raising the legs lying\"\n      },\n      {\n        \"id\": \"6\",\n        \"title\": \"Twisting\"\n      },\n      {\n        \"id\": \"7\",\n        \"title\": \"Rock climber\"\n      },\n      {\n        \"id\": \"8\",\n        \"title\": \"Bicycle\"\n      }\n    ],\n    \"settings\": {\n      \"work\": 20,\n      \"pause\": 10,\n      \"roundes\": 2,\n      \"rest\": 30,\n      \"exercises\": 8\n    },\n    \"schedule\": defaultSchedule\n  },\n  {\n    \"id\": \"1\",\n    \"title\": \"Hips and buttocks\",\n    \"description\": \"Training hips and buttocks muscles\",\n    \"plan\": [\n      {\n        \"id\": \"1\",\n        \"title\": \"Lunges forward\"\n      },\n      {\n        \"id\": \"2\",\n        \"title\": \"Lunges to the side\"\n      },\n      {\n        \"id\": \"3\",\n        \"title\": \"Lunges backward\"\n      },\n      {\n        \"id\": \"4\",\n        \"title\": \"Squats\"\n      },\n      {\n        \"id\": \"5\",\n        \"title\": \"Swing back with your right foot\"\n      },\n      {\n        \"id\": \"6\",\n        \"title\": \"Swing back with your right foot\"\n      },\n      {\n        \"id\": \"7\",\n        \"title\": \"Pelvic lift\"\n      },\n      {\n        \"id\": \"8\",\n        \"title\": \"Squats\"\n      }\n    ],\n    \"settings\": {\n      \"work\": 20,\n      \"pause\": 10,\n      \"roundes\": 1,\n      \"rest\": 120,\n      \"exercises\": 8\n    },\n    \"schedule\": defaultSchedule\n  }\n];\n\nexport default programs;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { IProgramItem } from './interfaces';\n\nconst ProgramItem = ({ id, title, description }: IProgramItem) => (\n  <li className=\"program-item programs-list__item\" key={id}>\n    <h2 className=\"program-item__title\">\n      {title}\n    </h2>\n    <p className=\"program-item__description\">\n      {description}\n    </p>\n    <Link to={`/program/${id}`} className=\"program-item__link\">\n      To Program\n    </Link>\n  </li>\n);\n\nexport default ProgramItem;","import React from 'react';\n\nimport ProgramItem from './ProgramItem';\nimport { IProgramsProps } from './interfaces';\n\nconst Programs = ({ programs }: IProgramsProps) => (\n  <ul className=\"list-unstyle programs-list\">\n    {programs.map(props => <ProgramItem {...props} />)}\n  </ul>\n);\n\nexport default Programs;\n","import React from 'react';\n\nimport programs from '../../db';\nimport Programs from '../../components/Programs';\n\nconst Main = () => (\n  <Programs programs={programs} />\n);\n\nexport default Main;","import React from 'react';\n\nimport { IEditorInput } from './interfaces';\n\nconst EditorInput = ({ \n  className, \n  label, \n  name,  \n  value, \n  type, \n  onChange, \n  message = '',\n  step \n}: IEditorInput) => (\n  <p className={`editor-input ${className}`}>\n    {label && \n      <label className=\"editor-input__label\">\n        {label}\n      </label>\n    }\n    <input\n      className=\"editor-input__input\" \n      type={type} \n      name={name} \n      value={value} \n      onChange={onChange} \n      step={step}\n    />\n    {message && \n      <span className=\"editor-input__message\">\n        {message}\n      </span>\n    }\n  </p>\n);\n\nexport default EditorInput;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport programs from '../../db';\n\nimport EditorInput from '../../components/EditorInput';\n\nimport { IPlanProps, IPlanState, IExercise } from './interfaces';\n\nclass Plan extends React.Component<IPlanProps> {\n  state: IPlanState = {\n    id: '',\n    title: '',\n    work: 0,\n    pause: 0,\n    roundes: 0,\n    rest: 0,\n    plan: []\n  }\n\n  constructor(props: IPlanProps) {\n    super(props);\n    this.changeValue = this.changeValue.bind(this);\n  }\n\n  fetchPlan() {\n    const { id } = this.props.match.params;\n    return programs[id];\n  }\n\n  componentDidMount(): void {\n    const { settings, plan, ...planProps } = this.fetchPlan();\n\n    this.setState({\n      ...planProps,\n      ...settings,\n      plan\n    });\n  }\n\n  changeValue(e: React.ChangeEvent<HTMLInputElement>) {\n    const propName = e.currentTarget.name;\n    const propValue = e.currentTarget.value;\n    this.setState({\n      [propName]: propValue\n    });\n  }\n\n  renderPlanRow(row: IExercise) {\n    return (\n      <li key={row.id} className=\"plan-list__item\">\n        {row.title}\n      </li>\n    )\n  }\n\n  renderPlanList() {\n    const { plan } = this.state;\n    return (\n      <div className=\"plan-section\">\n        <h4 className=\"plan-section__title\">Plan</h4>\n        <ul className=\"list-unstyle plan-list plan-section__plan-list\">\n          {plan.map(this.renderPlanRow)}\n        </ul>\n      </div>\n    );\n  }\n\n  render() {\n    const { id, title, work, pause, rest, roundes } = this.state;\n    return (\n      <div className=\"plan-page\">\n        <h2 className=\"page-title plan-page__title\">\n          {title}\n        </h2>\n\n        <div className=\"plan-editor plan-page__editor\">\n          <ul className=\"list-unstyle plan-editor__edit-settings\">\n            <li className=\"plan-editor__input\">\n              <EditorInput\n                className=\"plan-editor__edit-title\"\n                type=\"text\"\n                name=\"title\"\n                value={title}\n                label=\"Title:\"\n                onChange={this.changeValue}\n              />\n            </li>\n            <li className=\"plan-editor__input\">\n              <EditorInput \n                type=\"number\"\n                name=\"work\"\n                value={work}\n                label=\"Work:\"\n                onChange={this.changeValue}\n                step=\"5\"\n              />\n            </li>\n            <li className=\"plan-editor__input\">\n              <EditorInput \n                type=\"number\"\n                name=\"pause\"\n                value={pause}\n                label=\"Pause:\"\n                onChange={this.changeValue}\n                step=\"5\"\n              />\n            </li>\n            <li className=\"plan-editor__input\">\n              <EditorInput \n                type=\"number\"\n                name=\"roundes\"\n                value={roundes}\n                label=\"Roundes:\"\n                onChange={this.changeValue}\n                step=\"1\"\n              />\n            </li>\n            <li className=\"plan-editor__input\">\n              <EditorInput \n                type=\"number\"\n                name=\"rest\"\n                value={rest}\n                label=\"Rest:\"\n                onChange={this.changeValue}\n                step=\"30\"\n              />\n            </li>\n          </ul>\n        </div>\n        {this.renderPlanList()}\n      </div>\n    );\n  }\n}\n\nexport default Plan;","\nexport interface IConvertSeconds {\n  (seconds: number): string\n}\n\nexport const convertSeconds: IConvertSeconds = seconds => {\n  let hrs = Math.floor(seconds / 3600);\n  let min = Math.floor((seconds - (hrs * 3600)) / 60);\n  let sec = seconds - (hrs * 3600) - (min * 60);\n  sec = Math.round(sec * 100) / 100;\n\n  let result = (hrs < 10 ? \"0\" + hrs : hrs);\n  result += \":\" + (min < 10 ? \"0\" + min : min);\n  result += \":\" + (sec < 10 ? \"0\" + sec : sec);\n\n  return String(result);\n};\n","import React, {ReactText} from 'react';\nimport { Link } from 'react-router-dom';\nimport programs from '../../db';\n\nimport { convertSeconds, IConvertSeconds } from '../../helpers/time';\nimport { IProgramProps, IProgramState, ISettings } from './interfaces';\n\nclass Program extends React.Component<IProgramProps> {\n  convertSeconds: IConvertSeconds;\n\n  constructor(props: any) {\n    super(props);\n    this.convertSeconds = convertSeconds;\n  }\n  state: IProgramState = {\n    id: '',\n    title: '',\n    description: '',\n    time: 0,\n    kCal: 0,\n  };\n\n  fetchProgram() {\n    const { id } = this.props.match.params;\n    return programs[id];\n  }\n\n  calculateTime(settings: ISettings): ReactText {\n    const { work, pause, roundes, rest, exercises } = settings;\n    const seconds: number = ((((work + pause) * exercises) + rest) * roundes) - rest;\n\n    return this.convertSeconds(seconds);\n  }\n\n  calculateCalories(): number {\n    return 100;\n  }\n\n  componentDidMount(): void {\n    const { settings, ...programProps } = this.fetchProgram();\n\n    this.setState({\n      ...programProps,\n      time: this.calculateTime(settings),\n      kCal: this.calculateCalories()\n    });\n  }\n\n  render() {\n    const { id, title, description, time, kCal } = this.state;\n    return (\n      <div className=\"program-page\">\n        <div className=\"program-info program-page__info\">\n          <h2 className=\"page-title program-info__title\">\n            {title}\n          </h2>\n          <p>\n            {description}\n          </p>\n          <div className=\"program-info__details\">\n            <span className=\"program-info__text\">\n              Time: {time}\n            </span>\n            {' '}\n            <span className=\"program-info__text\">\n              kCal: {kCal}\n            </span>\n          </div>\n        </div>\n\n        <ul className=\"list-unstyle program-menu program-page__menu\">\n          <li className=\"program-menu__item\">\n            <Link className=\"program-menu__link\" to={`/training/${id}`}>Training</Link>\n          </li>\n          {false &&\n            <li className=\"program-menu__item\">\n              <Link className=\"program-menu__link\" to={`/statistic/${id}`}>Statistic</Link>\n            </li>\n          }\n          {false &&\n            <li className=\"program-menu__item\">\n              <Link className=\"program-menu__link\" to={`/schedule/${id}`}>Schedule</Link>\n            </li>\n          }\n          <li className=\"program-menu__item\">\n            <Link className=\"program-menu__link\" to={`/plan/${id}`}>Plan</Link>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Program;","import React from 'react';\n\nconst Schedule = () => (\n  <div>\n    <h2 className=\"page-title\">Schedule</h2>\n  </div>\n);\n\nexport default Schedule;","import React from 'react';\n\nconst Statistic = () => (\n  <div>\n    <h2 className=\"page-title\">Statistic</h2>\n  </div>\n);\n\nexport default Statistic;","import React from 'react';\n\nimport { IButton } from './interfaces';\n\nconst Button = ({ children, className, disabled, onClick }: IButton) => (\n  <button\n    type=\"button\"\n    className={`btn btn-success ${className || ''}`}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;","import React from 'react';\n\nimport { ITimer } from './interfaces';\n\nconst Timer = ({ minutes, seconds }: ITimer) => (\n  <div className=\"timer\">\n    {minutes}:{seconds}\n  </div>\n);\n\nexport default Timer;","import React from 'react';\n\nimport { convertSeconds, IConvertSeconds } from '../../helpers/time';\n\nimport Button from './Button';\nimport Timer from './Timer';\n\nimport { ITrainingTimer, ITrainingTimerState } from './interfaces';\n\nconst ONE_SECOND = 1000;\n\nclass TrainingTimer extends React.Component<ITrainingTimer> {\n  time: number;\n  laps: number;\n  onFinish: () => void;\n  intervalTimerId: number;\n  secondsRemaining: number;\n  convertSeconds: IConvertSeconds;\n\n  constructor(props: any) {\n    super(props);\n    \n    this.time = this.props.time;\n    this.laps = this.props.laps;\n    this.onFinish = this.props.onFinish;\n    this.intervalTimerId = 0;\n    this.secondsRemaining = 0;\n\n    // handlers\n    this.startCountDown = this.startCountDown.bind(this);\n    this.stopCountDown = this.stopCountDown.bind(this);\n    this.tick = this.tick.bind(this);\n    this.setTime = this.setTime.bind(this);\n    this.convertSeconds = convertSeconds;\n  }\n\n  state:ITrainingTimerState = {\n    minutes: '00',\n    seconds: '00',\n  };\n\n  componentWillMount(): void {\n    this.setTime()\n  }\n\n  setTime() {\n    const result = this.convertSeconds(this.props.time);\n    const [, minutes, seconds] = result.split(':');\n\n    this.setState({ minutes, seconds });\n  }\n\n  tick() {\n    let minutes = Math.floor(this.secondsRemaining / 60);\n    let seconds = this.secondsRemaining - (minutes * 60);\n      \n    this.setState({ minutes, seconds });\n\n    if (seconds < 10) {\n      this.setState({\n        seconds: \"0\" + this.state.seconds,\n      })\n    }\n\n    if (minutes < 10) {\n      this.setState({\n        minutes: \"0\" + minutes,\n      })\n    }\n\n    if (minutes === 0 && seconds === 0) {\n      clearInterval(this.intervalTimerId);\n\n      if (this.props.laps) {\n        this.props.onFinish();\n        this.setTime();\n        this.startCountDown();\n      }\n    }\n\n    this.secondsRemaining--;\n  }\n\n  startCountDown() {\n    this.intervalTimerId = window.setInterval(this.tick, ONE_SECOND);\n    let min = Number(this.state.minutes);\n    this.secondsRemaining = (min * 60) + Number(this.state.seconds);\n  }\n\n  stopCountDown() {\n    clearInterval(this.intervalTimerId);\n  }\n\n  render() {\n    return (\n      <div className=\"training-timer\">\n        {!this.props.laps &&\n          <div className=\"training-timer__finish-workout\">\n            FINISH WORKOUT\n          </div>\n        }\n        {!!this.props.laps &&\n          <React.Fragment>\n            <Timer\n              minutes={this.state.minutes}\n              seconds={this.state.seconds}\n            />\n            <div className=\"trainig-timer__actions\">\n              <Button\n                className=\"training-timer__btn training-timer__start\"\n                onClick={this.startCountDown}\n              >\n                Start\n              </Button>\n              <Button\n                className=\"training-timer__btn training-timer__stop\"\n                onClick={this.stopCountDown}\n              >\n                Stop\n              </Button>\n            </div>\n          </React.Fragment>\n        }\n      </div>\n    );\n\n  }\n\n}\n\nexport default TrainingTimer;\n","import React from 'react';\nimport programs from '../../db';\nimport TrainingTimer from '../../components/TrainingTimer';\n\nimport { ITrainingProps, ITrainingState, IProgram, ITraining, ISettings, IPlan } from './interfaces';\n\nclass Training extends React.Component<ITrainingProps> {\n\n  constructor(props: any) {\n    super(props);\n    this.onFinish = this.onFinish.bind(this);\n    this.getTraining = this.getTraining.bind(this);\n  }\n\n  state: ITrainingState = {\n    id: '',\n    title: '',\n    training: [],\n    counter: 0\n  };\n\n  getPlanTitle = (plan: IPlan[], index: number, exercises: number) => {\n    return plan[index] && plan[index].title ||\n    plan[index - exercises] && plan[index - exercises].title || 'NO TITLE';\n  }\n\n  accTraining = (plan: IPlan[], settings: ISettings) => \n    (acc: ITraining[], _: object, index: number):any => {\n    const { exercises, work, pause, roundes, rest } = settings;\n    const workoutTitle = this.getPlanTitle(plan, index, exercises);\n\n    if (index && !(index % exercises)) {\n      return [\n        ...acc,\n        { \n          title: 'Now you can rest',\n          time: rest\n        },\n        {\n          title: workoutTitle,\n          time: work\n        }\n      ];\n    }\n\n    return [\n      ...acc,\n      {\n        title: 'Preparing',\n        time: pause\n      },\n      {\n        title: workoutTitle,\n        time: work\n      }\n    ];\n  }\n\n  getTraining(program: IProgram) {\n    const { plan, settings } = program;\n    const { exercises, roundes } = settings;\n    const trainingLength = exercises * roundes;\n\n    return Array.from({ length: trainingLength })\n      .reduce(this.accTraining(plan, settings), []);\n  }\n\n  onFinish() {\n    this.setState({\n      counter: this.state.counter + 1\n    });\n  }\n\n  componentWillMount(): void {\n    const { id } = this.props.match.params;\n    const program = programs[id];\n    this.setState({\n      title: program.title,\n      training: this.getTraining(program)\n    });\n  }\n\n  render() {\n    const { title, training, counter } = this.state;\n    const currentExercise = training[counter];\n    const laps = training.length - counter;\n    return (\n      <div className=\"training-page\">\n        <h2 className=\"page-title training-page__title\">\n          {title}\n        </h2>\n        <div className=\"training-page__exercise\">\n          {currentExercise.title}\n        </div>\n        <TrainingTimer\n          time={currentExercise.time || 0}\n          laps={laps}\n          onFinish={this.onFinish}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Training;","export default {\n  program: 'program',\n  training: 'training',\n  statistic: 'statistic',\n  schedule: 'schedule',\n  plan: 'plan'\n};","import React from 'react';\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport { Main, Plan, Program, Schedule, Statistic, Training } from './pages';\n\nimport routes from './routes';\n\nconst AppRoutes = () => (\n  <Router>\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <span className=\"app-header__title\">\n          HIIT App\n        </span>\n        {false &&\n        <div className=\"app-header__actions\">\n          <button className=\"app-header__btn\">\n            Account\n          </button>\n          <button className=\"app-header__btn\">\n            Setting\n          </button>\n        </div>\n        }\n      </header>\n      <div className=\"app-content\">\n        <Route path={`/`} exact component={Main} />\n        <Route path={`/${routes.program}/:id`} component={Program} />\n        <Route path={`/${routes.training}/:id`} component={Training} />\n        <Route path={`/${routes.statistic}/:id`} component={Statistic} />\n        <Route path={`/${routes.schedule}/:id`} component={Schedule} />\n        <Route path={`/${routes.plan}/:id`} component={Plan} />\n      </div>\n    </div>\n  </Router>\n);\n\nexport default AppRoutes;","import React from 'react';\nimport AppRoutes from './AppRoutes';\n\nconst App = () => (\n  <AppRoutes />\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}